<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.child.dao.HelpMsgMapper">
  <resultMap id="BaseResultMap" type="com.child.model.HelpMsg">
    <id column="id" jdbcType="INTEGER" property="id" />
        <result column="hname" property="hname" jdbcType="VARCHAR" />
  <result column="hage" property="hage" jdbcType="INTEGER" />
  <result column="hzp" property="hzp" jdbcType="VARCHAR" />
  <result column="hsex" property="hsex" jdbcType="INTEGER" />
  <result column="hcel" property="hcel" jdbcType="VARCHAR" />
  <result column="help_intro" property="helpIntro" jdbcType="VARCHAR" />
  <result column="amount" property="amount" jdbcType="INTEGER" />
  <result column="create_date" property="createDate" jdbcType="VARCHAR" />

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
     id,hname,hage,hzp,hsex,hcel,help_intro,amount,create_date
  </sql>
  <select id="selectByExample" parameterType="com.child.model.HelpMsgExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from help_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
     <if test="startRow >= 0 and pageRows > 0">
  limit ${startRow},${pageRows}
  </if>

  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
     from help_msg
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
   delete from help_msg
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.child.model.HelpMsgExample">
    delete from help_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.child.model.HelpMsg">
      <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
  SELECT LAST_INSERT_ID()
</selectKey>

      insert into help_msg (hname,hage,hzp,hsex,hcel,help_intro,amount,create_date)
      values (	#{id,jdbcType=INTEGER},	#{hname,jdbcType=VARCHAR},	#{hage,jdbcType=INTEGER},	#{hzp,jdbcType=VARCHAR},	#{hsex,jdbcType=INTEGER},	#{hcel,jdbcType=VARCHAR},	#{helpIntro,jdbcType=VARCHAR},	#{amount,jdbcType=INTEGER},	#{createDate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.child.model.HelpMsg">
   <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
  SELECT LAST_INSERT_ID()
</selectKey>

    insert into help_msg
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null" >
	  id,
 </if>
<if test="hname != null" >
	  hname,
 </if>
<if test="hage != null" >
	  hage,
 </if>
<if test="hzp != null" >
	  hzp,
 </if>
<if test="hsex != null" >
	  hsex,
 </if>
<if test="hcel != null" >
	  hcel,
 </if>
<if test="helpIntro != null" >
	  help_intro,
 </if>
<if test="amount != null" >
	  amount,
 </if>
<if test="createDate != null" >
	  create_date
 </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
         <if test="id != null" >
	 #{id,jdbcType=INTEGER},
	 </if>
  <if test="hname != null" >
	 #{hname,jdbcType=VARCHAR},
	 </if>
  <if test="hage != null" >
	 #{hage,jdbcType=INTEGER},
	 </if>
  <if test="hzp != null" >
	 #{hzp,jdbcType=VARCHAR},
	 </if>
  <if test="hsex != null" >
	 #{hsex,jdbcType=INTEGER},
	 </if>
  <if test="hcel != null" >
	 #{hcel,jdbcType=VARCHAR},
	 </if>
  <if test="helpIntro != null" >
	 #{helpIntro,jdbcType=VARCHAR},
	 </if>
  <if test="amount != null" >
	 #{amount,jdbcType=INTEGER},
	 </if>
  <if test="createDate != null" >
	 #{createDate,jdbcType=VARCHAR},
	 </if>

    </trim>
  </insert>
  <select id="countByExample" parameterType="com.child.model.HelpMsgExample" resultType="java.lang.Long">
    select count(*) from help_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update help_msg
    <set>
       <if test="record.hname != null" >
	 hname = #{record.hname,jdbcType=VARCHAR},
</if>
 <if test="record.hage != null" >
	 hage = #{record.hage,jdbcType=INTEGER},
</if>
 <if test="record.hzp != null" >
	 hzp = #{record.hzp,jdbcType=VARCHAR},
</if>
 <if test="record.hsex != null" >
	 hsex = #{record.hsex,jdbcType=INTEGER},
</if>
 <if test="record.hcel != null" >
	 hcel = #{record.hcel,jdbcType=VARCHAR},
</if>
 <if test="record.helpIntro != null" >
	 help_intro = #{record.helpIntro,jdbcType=VARCHAR},
</if>
 <if test="record.amount != null" >
	 amount = #{record.amount,jdbcType=INTEGER},
</if>
 <if test="record.createDate != null" >
	 create_date = #{record.createDate,jdbcType=VARCHAR}
</if>

    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update help_msg
    set 
    				hname = #{record.hname,jdbcType=VARCHAR},	hage = #{record.hage,jdbcType=INTEGER},	hzp = #{record.hzp,jdbcType=VARCHAR},	hsex = #{record.hsex,jdbcType=INTEGER},	hcel = #{record.hcel,jdbcType=VARCHAR},	help_intro = #{record.helpIntro,jdbcType=VARCHAR},	amount = #{record.amount,jdbcType=INTEGER},	create_date = #{record.createDate,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.child.model.HelpMsg">
    update help_msg
    <set>
       <if test="hname != null" >
	 hname = #{hname,jdbcType=VARCHAR},
</if>
 <if test="hage != null" >
	 hage = #{hage,jdbcType=INTEGER},
</if>
 <if test="hzp != null" >
	 hzp = #{hzp,jdbcType=VARCHAR},
</if>
 <if test="hsex != null" >
	 hsex = #{hsex,jdbcType=INTEGER},
</if>
 <if test="hcel != null" >
	 hcel = #{hcel,jdbcType=VARCHAR},
</if>
 <if test="helpIntro != null" >
	 help_intro = #{helpIntro,jdbcType=VARCHAR},
</if>
 <if test="amount != null" >
	 amount = #{amount,jdbcType=INTEGER},
</if>
 <if test="createDate != null" >
	 create_date = #{createDate,jdbcType=VARCHAR}
</if>

    </set>
     where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.child.model.HelpMsg">
    update help_msg
    set 
     			hname = #{hname,jdbcType=VARCHAR},	hage = #{hage,jdbcType=INTEGER},	hzp = #{hzp,jdbcType=VARCHAR},	hsex = #{hsex,jdbcType=INTEGER},	hcel = #{hcel,jdbcType=VARCHAR},	help_intro = #{helpIntro,jdbcType=VARCHAR},	amount = #{amount,jdbcType=INTEGER},	create_date = #{createDate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>
