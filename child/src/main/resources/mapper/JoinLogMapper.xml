<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.child.dao.JoinLogMapper">
  <resultMap id="BaseResultMap" type="com.child.model.JoinLog">
    <id column="id" jdbcType="INTEGER" property="id" />
        <result column="uid" property="uid" jdbcType="INTEGER" />
  <result column="ureal_name" property="urealName" jdbcType="VARCHAR" />
  <result column="ucel_phone" property="ucelPhone" jdbcType="VARCHAR" />
  <result column="aid" property="aid" jdbcType="INTEGER" />
  <result column="aact_time" property="aactTime" jdbcType="VARCHAR" />
  <result column="aaddress" property="aaddress" jdbcType="VARCHAR" />
  <result column="create_time" property="createTime" jdbcType="VARCHAR" />

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
     id,uid,ureal_name,ucel_phone,aid,aact_time,aaddress,create_time
  </sql>
  <select id="selectByExample" parameterType="com.child.model.JoinLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from join_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
     <if test="startRow >= 0 and pageRows > 0">
  limit ${startRow},${pageRows}
  </if>

  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
     from join_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
   delete from join_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.child.model.JoinLogExample">
    delete from join_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.child.model.JoinLog">
      <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
  SELECT LAST_INSERT_ID()
</selectKey>

      insert into join_log (uid,ureal_name,ucel_phone,aid,aact_time,aaddress,create_time)
      values (	#{id,jdbcType=INTEGER},	#{uid,jdbcType=INTEGER},	#{urealName,jdbcType=VARCHAR},	#{ucelPhone,jdbcType=VARCHAR},	#{aid,jdbcType=INTEGER},	#{aactTime,jdbcType=VARCHAR},	#{aaddress,jdbcType=VARCHAR},	#{createTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.child.model.JoinLog">
   <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
  SELECT LAST_INSERT_ID()
</selectKey>

    insert into join_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null" >
	  id,
 </if>
<if test="uid != null" >
	  uid,
 </if>
<if test="urealName != null" >
	  ureal_name,
 </if>
<if test="ucelPhone != null" >
	  ucel_phone,
 </if>
<if test="aid != null" >
	  aid,
 </if>
<if test="aactTime != null" >
	  aact_time,
 </if>
<if test="aaddress != null" >
	  aaddress,
 </if>
<if test="createTime != null" >
	  create_time
 </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
         <if test="id != null" >
	 #{id,jdbcType=INTEGER},
	 </if>
  <if test="uid != null" >
	 #{uid,jdbcType=INTEGER},
	 </if>
  <if test="urealName != null" >
	 #{urealName,jdbcType=VARCHAR},
	 </if>
  <if test="ucelPhone != null" >
	 #{ucelPhone,jdbcType=VARCHAR},
	 </if>
  <if test="aid != null" >
	 #{aid,jdbcType=INTEGER},
	 </if>
  <if test="aactTime != null" >
	 #{aactTime,jdbcType=VARCHAR},
	 </if>
  <if test="aaddress != null" >
	 #{aaddress,jdbcType=VARCHAR},
	 </if>
  <if test="createTime != null" >
	 #{createTime,jdbcType=VARCHAR},
	 </if>

    </trim>
  </insert>
  <select id="countByExample" parameterType="com.child.model.JoinLogExample" resultType="java.lang.Long">
    select count(*) from join_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update join_log
    <set>
       <if test="record.uid != null" >
	 uid = #{record.uid,jdbcType=INTEGER},
</if>
 <if test="record.urealName != null" >
	 ureal_name = #{record.urealName,jdbcType=VARCHAR},
</if>
 <if test="record.ucelPhone != null" >
	 ucel_phone = #{record.ucelPhone,jdbcType=VARCHAR},
</if>
 <if test="record.aid != null" >
	 aid = #{record.aid,jdbcType=INTEGER},
</if>
 <if test="record.aactTime != null" >
	 aact_time = #{record.aactTime,jdbcType=VARCHAR},
</if>
 <if test="record.aaddress != null" >
	 aaddress = #{record.aaddress,jdbcType=VARCHAR},
</if>
 <if test="record.createTime != null" >
	 create_time = #{record.createTime,jdbcType=VARCHAR}
</if>

    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update join_log
    set 
    				uid = #{record.uid,jdbcType=INTEGER},	ureal_name = #{record.urealName,jdbcType=VARCHAR},	ucel_phone = #{record.ucelPhone,jdbcType=VARCHAR},	aid = #{record.aid,jdbcType=INTEGER},	aact_time = #{record.aactTime,jdbcType=VARCHAR},	aaddress = #{record.aaddress,jdbcType=VARCHAR},	create_time = #{record.createTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.child.model.JoinLog">
    update join_log
    <set>
       <if test="uid != null" >
	 uid = #{uid,jdbcType=INTEGER},
</if>
 <if test="urealName != null" >
	 ureal_name = #{urealName,jdbcType=VARCHAR},
</if>
 <if test="ucelPhone != null" >
	 ucel_phone = #{ucelPhone,jdbcType=VARCHAR},
</if>
 <if test="aid != null" >
	 aid = #{aid,jdbcType=INTEGER},
</if>
 <if test="aactTime != null" >
	 aact_time = #{aactTime,jdbcType=VARCHAR},
</if>
 <if test="aaddress != null" >
	 aaddress = #{aaddress,jdbcType=VARCHAR},
</if>
 <if test="createTime != null" >
	 create_time = #{createTime,jdbcType=VARCHAR}
</if>

    </set>
     where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.child.model.JoinLog">
    update join_log
    set 
     			uid = #{uid,jdbcType=INTEGER},	ureal_name = #{urealName,jdbcType=VARCHAR},	ucel_phone = #{ucelPhone,jdbcType=VARCHAR},	aid = #{aid,jdbcType=INTEGER},	aact_time = #{aactTime,jdbcType=VARCHAR},	aaddress = #{aaddress,jdbcType=VARCHAR},	create_time = #{createTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>
